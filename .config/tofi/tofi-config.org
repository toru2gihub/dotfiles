#+title: Tofi config
#+author: toru
#+property: header-args :tangle config
#+startup: content
#+auto_tangle: t

* General
#+begin_src conf

# include = /path/to/config

#+end_src

* Fonts
#+begin_src conf

font = "Jetbrains Mono"

font-size = 15

hint-font = true

#+end_src

* Text Theming
#+begin_src conf

# All text defaults to this color if not otherwise specified.
text-color = #ffffff

# Prompt text theme
prompt-color = #ffffff
prompt-background = #00000000
prompt-background-padding = 0
prompt-background-corner-radius = 0

# Placeholder text theme
placeholder-color = #ffffffA8
placeholder-background = #00000000
placeholder-background-padding = 0
placeholder-background-corner-radius = 0

# Input text theme
input-color = #ffffff
#input-background = #000000
input-background-padding = 0
input-background-corner-radius = 0

# Default result text theme
# default-result-color = #ffffff
default-result-background = #00000000
default-result-background-padding = 0
default-result-background-corner-radius = 0

# Selection text
selection-color = #ffa500
#selection-color = #a6e3a1
selection-background = #00000000
selection-background-padding = 0
selection-background-corner-radius = 0

# Matching portion of selection text
#selection-match-color = #f38ba8
selection-match-color = #ff0000

#+end_src

* Text cursor theme
#+begin_src conf

# Style of the optional text cursor.
#
# Supported values: bar, block, underscore
text-cursor-style = underscore

# Color of the text cursor
text-cursor-color = #ffffff

# Color of text behind the text cursor when text-cursor-style = block
text-cursor-background = #000000

# Corner radius of the text cursor
text-cursor-corner-radius = 0

# Thickness of the bar and underscore text cursors.
text-cursor-thickness = 2

#+end_src

* Text layout
#+begin_src conf

# Prompt to display.
prompt-text = "λ " 

# Extra horizontal padding between prompt and input.
prompt-padding = 0

# Placeholder input text.
placeholder-text = ""

# Maximum number of results to display.
# If 0, tofi will draw as many results as it can fit in the window.
num-results = 0

# Spacing between results in pixels. Can be negative.
result-spacing = 0

# List results horizontally.
horizontal = false

# Minimum width of input in horizontal mode.
min-input-width = 0

#+end_src

* Window theming 
#+begin_src conf

# Width and height of the window. Can be pixels or a percentage.
width = 20%
height = 35%

# Window background color
#background-color = #000000
background-color = #000A
#background-color = #1e1d2f

# Width of the border outlines in pixels.
outline-width = 4

# Border outline color
#outline-color = #1e1d2f
outline-color = #000a

# Width of the border in pixels.
border-width = 1

# Border color
#border-color = #1e1d2f
border-color = #000a

# Radius of window corners in pixels.
corner-radius = 25

# Padding between borders and text. Can be pixels or a percentage.
padding-top = 8
padding-bottom = 8
padding-left = 8
padding-right = 8

# Whether to clip text drawing to be within the specified padding. This
# is mostly important for allowing text to be inset from the border,
# while still allowing text backgrounds to reach right to the edge.
clip-to-padding = true

# Whether to scale the window by the output's scale factor.
scale = true

#+end_src

* Window positioning
#+begin_src conf

# The name of the output to appear on. An empty string will use the
# default output chosen by the compositor.
output = ""

# Supported values: top-left, top, top-right, right, bottom-right,
# bottom, bottom-left, left, center.
anchor = center

# Set the size of the exclusive zone.
#
# A value of -1 means ignore exclusive zones completely.
# A value of 0 will move tofi out of the way of other windows' zones.
# A value greater than 0 will set that much space as an exclusive zone.
#
# Values greater than 0 are only meaningful when tofi is anchored to a
# single edge.
exclusive-zone = -1

# Window offset from edge of screen. Only has an effect when anchored
# to the relevant edge. Can be pixels or a percentage.
margin-top = 0
margin-bottom = 0
margin-left = 0
margin-right = 0

#+end_src

* Behaviour
#+begin_src conf

# Hide the mouse cursor.
hide-cursor = false

# Show a text cursor in the input field.
text-cursor = true

# Sort results by number of usages in run and drun modes.
history = true

# Specify an alternate file to read and store history information
# from / to. This shouldn't normally be needed, and is intended to
# facilitate the creation of custom modes.
# history-file = /path/to/histfile

# Select the matching algorithm used. If normal, substring matching is
# used, weighted to favour matches closer to the beginning of the
# string. If prefix, only substrings at the beginning of the string are
# matched. If fuzzy, searching is performed via a simple fuzzy matching
# algorithm.
#
# Supported values: normal, prefix, fuzzy
matching-algorithm = normal

# If true, require a match to allow a selection to be made. If false,
# making a selection with no matches will print input to stdout.
# In drun mode, this is always true.
require-match = true

# If true, automatically accept a result if it is the only one
# remaining. If there's only one result on startup, window creation is
# skipped altogether.
auto-accept-single = false

# If true, typed input will be hidden, and what is displayed (if
# anything) is determined by the hidden-character option.
hide-input = false

# Replace displayed input characters with a character. If the empty
# string is given, input will be completely hidden.
# This option only has an effect when hide-input is set to true.
hidden-character = "*"

# If true, use physical keys for shortcuts, regardless of the current
# keyboard layout. If false, use the current layout's keys.
physical-keybindings = true

# Instead of printing the selected entry, print the 1-based index of
# the selection. This option has no effect in run or drun mode. If
# require-match is set to false, non-matching input will still result
# in the input being printed.
print-index = false

# If true, directly launch applications on selection when in drun mode.
# Otherwise, just print the command line to stdout.
drun-launch = true

# The terminal to run terminal programs in when in drun mode.
# This option has no effect if drun-launch is set to true.
# Defaults to the value of the TERMINAL environment variable.
# terminal = foot

# Delay keyboard initialisation until after the first draw to screen.
# This option is experimental, and will cause tofi to miss keypresses
# for a short time after launch. The only reason to use this option is
# performance on slow systems.
late-keyboard-init = false

# If true, allow multiple simultaneous processes.
# If false, create a lock file on startup to prevent multiple instances
# from running simultaneously.
multi-instance = false

# Assume input is plain ASCII, and disable some Unicode handling
# functions. This is faster, but means e.g. a search for "e" will not
# match "é".
ascii-input = false

#+end_src
