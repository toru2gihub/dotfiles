;;; simple-modeline-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from simple-modeline.el

(defvar simple-modeline-mode nil "\
Non-nil if Simple-Modeline mode is enabled.
See the `simple-modeline-mode' command
for a description of this minor mode.
Setting this variable directly does not take effect;
either customize it (see the info node `Easy Customization')
or call the function `simple-modeline-mode'.")
(custom-autoload 'simple-modeline-mode "simple-modeline" nil)
(autoload 'simple-modeline-mode "simple-modeline" "\
Minor mode to get a simple mode line.

When called interactively, toggle
`simple-modeline-mode'.  With prefix ARG, enable
`simple-modeline--mode' if ARG is positive, otherwise
disable it.

When called from Lisp, enable `simple-modeline-mode' if ARG is omitted,
nil or positive.  If ARG is `toggle', toggle `simple-modeline-mode'.
Otherwise behave as if called interactively.

(fn &optional ARG)" t)
(register-definition-prefixes "simple-modeline" '("simple-modeline--mode-line"))


;;; Generated autoloads from simple-modeline-core.el

(register-definition-prefixes "simple-modeline-core" '("simple-modeline-"))


;;; Generated autoloads from simple-modeline-segments.el

(register-definition-prefixes "simple-modeline-segments" '("simple-modeline-"))

;;; End of scraped data

(provide 'simple-modeline-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; simple-modeline-autoloads.el ends here
